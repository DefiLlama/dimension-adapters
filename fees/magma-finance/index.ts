import { printLocation } from "graphql";
import { Adapter, FetchResultV2, FetchV2 } from "../../adapters/types";
import { CHAIN } from "../../helpers/chains";
import fetchURL from "../../utils/fetchURL";

const magmaApiURL = "https://app.magmafinance.io/api/daily-fees";

interface MagmaStats {
  data: {
    fee: string;
    protocolFee: string;
  };
}

const methodology = {
  Fees: "Swap fees generated by the swap transactions on Magma Finance.",
  ProtocolRevenue: "Protocol fees charged from the swap fees.",
};

const fetchMagmaStats: FetchV2 = async ({
  startTimestamp,
  endTimestamp,
}): Promise<FetchResultV2> => {
  const url = `${magmaApiURL}?fromTimestamp=${startTimestamp}&toTimestamp=${endTimestamp}`;
  const { data }: MagmaStats = await fetchURL(url);
  const dailyFees = data.fee;
  const dailyRevenue = data.protocolFee;
  return {
    dailyFees,
    dailyRevenue,
    dailyProtocolRevenue: dailyRevenue,
  };
};

const adapter: Adapter = {
  version: 2,
  adapter: {
    [CHAIN.SUI]: {
      fetch: fetchMagmaStats,
      start: "2025-02-12",
      meta: {
        methodology,
      },
    },
  },
};

export default adapter;
