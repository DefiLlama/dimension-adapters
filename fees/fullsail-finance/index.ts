import { CHAIN } from '../../helpers/chains';
import { SimpleAdapter, FetchOptions } from '../../adapters/types';
import fetchURL from '../../utils/fetchURL';

const fullSailApiURL = 'https://app.fullsail.finance/api/defi_llama/fees';

interface FullSailStats {
    fees_usd: string;
    protocol_revenue_usd: string;
    holders_revenue_usd: string;
    revenue_usd: string;
}

const fetch = async (options: FetchOptions) => {
    const url = `${fullSailApiURL}?start_timestamp=${options.startTimestamp * 1000}&end_timestamp=${options.endTimestamp * 1000}`;
    const data: FullSailStats = await fetchURL(url);

    const dailyFees = Number(data.fees_usd) + Number(data.revenue_usd);
    const dailyUserFees = data.fees_usd;
    const dailyRevenue = data.revenue_usd;
    const dailyHoldersRevenue = data.holders_revenue_usd;
    const dailyProtocolRevenue = data.protocol_revenue_usd;
    const dailySupplySideRevenue = dailyFees - Number(dailyRevenue)

    return {
        dailyFees,
        dailyUserFees,
        dailyRevenue,
        dailyProtocolRevenue,
        dailyHoldersRevenue,
        dailySupplySideRevenue,
    };
};

const methodology = {
    Fees: 'Dynamic swap fees generated by the swap transactions on FullSail finance.',
    UserFees: 'Dynamic swap fees generated by the swap transactions on FullSail finance.',
    Revenue: 'Total daily revenue of the protocol, calculated as the sum of HoldersRevenue and ProtocolRevenue.',
    ProtocolRevenue: 'Protocol fees charged from the swap fees and protocol fees from rebase oSail.',
    HoldersRevenue: 'Fees distributed to veSail token holders, including all swap fees allocated to holders and rebase oSail.',
    SupplySideRevenue: 'Dynamic swap fees distributed to suppliers.',
};

const adapter: SimpleAdapter = {
    version: 2,
    adapter: {
        [CHAIN.SUI]: {
            fetch,
            start: '2025-05-30',
        },
    },
    methodology,
};

export default adapter;
