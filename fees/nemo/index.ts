import { Adapter, FetchResultV2, FetchV2 } from '../../adapters/types';
import { CHAIN } from '../../helpers/chains';
import fetchURL from '../../utils/fetchURL';

const nemoApiURL = 'https://api/v3/sui/daily-fees';

interface NemoStats {
  data:{
    fee: string;
    protocolFee: string;
  }
}

const methodology = {
  Fees: 'Swap fees generated by the swap transactions on Nemo Protocol.',
  ProtocolRevenue: 'Protocol fees charged from the swap fees.',
};

const fetchNemoStats: FetchV2 = async ({
  startTimestamp,
  endTimestamp,
}): Promise<FetchResultV2> => {
  const url = `${nemoApiURL}?fromTimestamp=${startTimestamp}&toTimestamp=${endTimestamp}`;
  const { data }: NemoStats = await fetchURL(url);
  const dailyFees = data.fee;
  const dailyRevenue = data.protocolFee;
  return {
    dailyFees,
    dailyRevenue,
    dailyProtocolRevenue: dailyRevenue,
  };
};

const adapter: Adapter = {
  version: 2,
  adapter: {
    [CHAIN.SUI]: {
      fetch: fetchNemoStats,
      start: '2024-01-01',
      meta: {
        methodology,
      },
    },
  },
};

export default adapter;
