import { Adapter, FetchResultV2, FetchV2 } from '../../adapters/types';
import { CHAIN } from '../../helpers/chains';
import fetchURL from '../../utils/fetchURL';

const cetusApiURL = 'https://api-sui.cetus.zone/v3/sui/dlmm/histogram?dateType=hour';


const methodology = {
  Fees: 'Swap fees generated by the swap transactions on Cetus Protocol.',
  ProtocolRevenue: 'Protocol fees charged from the swap fees.',
};

const fetchCetusStats: FetchV2 = async ({
  startTimestamp,
  endTimestamp,
}): Promise<FetchResultV2> => {
  const feeUrl = `${cetusApiURL}&dataType=fee&beginTimestamp=${startTimestamp}&endTimestamp=${endTimestamp}`;
  const protocolFeeUrl = `${cetusApiURL}&dataType=protocolFee&beginTimestamp=${startTimestamp}&endTimestamp=${endTimestamp}`;
  const feeList = (await fetchURL(feeUrl)).data.list;
  const protocolFeeList = (await fetchURL(protocolFeeUrl)).data.list;
  var dailyFees = 0;
  for (const item of feeList) {
    dailyFees += Number(item.value);
  }
  var dailyProtocolRevenue = 0;
  for (const item of protocolFeeList) {
    dailyProtocolRevenue += Number(item.value);
  }
  return {
    dailyFees,
    dailyRevenue: dailyProtocolRevenue,
    dailyProtocolRevenue: dailyProtocolRevenue,
  };
};

const adapter: Adapter = {
  version: 2,
  adapter: {
    [CHAIN.SUI]: {
      fetch: fetchCetusStats,
      start: '2025-09-30',
      meta: {
        methodology,
      },
    },
  },
};

export default adapter;
