import { CHAIN } from "../../helpers/chains";
import { SimpleAdapter } from "../../adapters/types";
import fetchURL from "../../utils/fetchURL";

// Foxify methodology
const methodology = {
    Fees: "All trading fees collected by the Foxify protocol from token swaps.",
    UserFees: "Trading fees paid by users when swapping tokens on Foxify DEX on Sonic blockchain.",
    Revenue: "Revenue generated by Foxify protocol from trading activities.",
    ProtocolRevenue: "Protocol share of trading fees retained by Foxify treasury.",
    SupplySideRevenue: "Portion of trading fees distributed to liquidity providers and stakers.",
};

// Foxify API-based fetch implementation using existing Foxify API
const fetch = async () => {
    // Fetch data from Foxify's existing API endpoint
    const apiResponse = await fetchURL("https://api.foxify.trade/FoxifyStats");

    const dailyVolume = apiResponse.volume?.daily || 0;
    const dailyFees = apiResponse.fees?.daily || 0;

    return {
        dailyVolume: dailyVolume,
        dailyFees: dailyFees,
        dailyRevenue: dailyFees, // Assuming all fees are revenue for now
        dailyProtocolRevenue: dailyFees * 0.3, // Example: 30% to protocol (update with actual %)
        dailySupplySideRevenue: dailyFees * 0.7, // Example: 70% to LPs (update with actual %)
        dailyUserFees: dailyFees,
        dailyHoldersRevenue: 0, // Update if FOX holders receive fees
    };
};

const adapter: SimpleAdapter = {
    methodology,
    runAtCurrTime: true,
    adapter: {
        [CHAIN.SONIC]: {
            fetch,
            start: "2025-04-24",
        },
    },
};

export default adapter;
